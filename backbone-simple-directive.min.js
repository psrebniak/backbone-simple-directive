(function(e){var t=typeof self==="object"&&self.self===self&&self||typeof global==="object"&&global.global===global&&global;if(typeof define==="function"&&define.amd){define(["underscore","jquery","backbone"],e)}else{e(t._,t.jQuery||t.Zepto||t.ender||t.$,t.Backbone)}})(function(e,t,o){var i=o.DeepModel||o.Model;o.Directives={};o.Directives["data-content"]=function(e,t,o,i){var n=function(t,o){e.html(o)};n(i,i.get(t));i.on("change:"+t,n)};o.Directives["data-visible"]=function(e,t,o,i){var n=function(t,o){e.toggle(!!o)};n(i,i.get(t));i.on("change:"+t,n)};o.Directives["data-change"]=function(e,t,o,i){var n=function(t,o){var i=e.prop("tagName");if(e.attr("type")==="checkbox"){e.prop("checked",!!o)}else if(e.attr("type")==="radio"){if(o===e.val()){e.prop("checked",true)}}else if(i==="INPUT"||i==="SELECT"){e.val(o)}};i.on("change:"+t,n);var a=function(){if(e.attr("type")==="checkbox"){i.set(t,e.prop("checked"))}else{i.set(t,e.val())}};e.on("change input blur",a);a()};o.Directives["data-class"]=function(t,o,i,n){var a={};try{a=JSON.parse(o)}catch(r){throw"Backbone-simple-directive JSON parse error: "+r.toString()}e.each(a,function(e,o){n.on("change:"+e.toString(),function(e,i){t.toggleClass(o,!!i)})})};o.Directives["data-ui"]=function(e,t,o,i){o.$ui=o.$ui||{};o.$ui[t]=e};o.View.prototype.setupDirective=function(){console.log("setup "+this.modelName);if(!e.isString(this.modelName)){throw"Backbone-simple-directive error: modelName is required for directiveView"}this.$model=this.$model||new i;var n=e.filter(this.$("[data-model]").toArray(),function(e){return t(e).attr("data-model")===this.modelName&&t(e).data("model-bound")!==true},this);e.each(n,function(i){t(i).data("model-bound",true);console.log("found elemenet");e.each(o.Directives,function(o,n){console.log("found directive: "+n);if(!t(i).attr(n)||!e.isFunction(o)){return}console.log("set "+n+"into "+this.modelName);o(t(i),t(i).attr(n),this,this.$model)},this)},this)};return o.Directives});
//# sourceMappingURL=backbone-simple-directive.min.map