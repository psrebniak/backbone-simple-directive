(function(e){var t=typeof self==="object"&&self.self===self&&self||typeof global==="object"&&global.global===global&&global;if(typeof define==="function"&&define.amd){define(["underscore","jquery","backbone"],e)}else{e(t._,t.jQuery||t.Zepto||t.ender||t.$,t.Backbone)}})(function(e,t,i){var o=i.DeepModel||i.Model;i.Directives={};i.Directives["data-content"]=function(e,t,i,o){var n=function(t,i){e.html(i)};n(o,o.get(t));o.on("change:"+t,n)};i.Directives["data-visible"]=function(e,t,i,o){var n=function(t,i){e.toggle(!!i)};n(o,o.get(t));o.on("change:"+t,n)};i.Directives["data-change"]=function(e,t,i,o){var n=function(t,i){var o=e.prop("tagName");if(e.attr("type")==="checkbox"){e.prop("checked",!!i)}else if(e.attr("type")==="radio"){if(i===e.val()){e.prop("checked",true)}}else if(o==="INPUT"||o==="SELECT"){e.val(i)}};o.on("change:"+t,n);var r=function(){if(e.attr("type")==="checkbox"){o.set(t,e.prop("checked"))}else{o.set(t,e.val())}};e.on("change input blur",r);r()};i.Directives["data-class"]=function(t,i,o,n){var r={};try{r=JSON.parse(i)}catch(a){if(console&&console.warn){console.warn("Backbone-simple-directive JSON parse error: "+a.toString())}return false}e.each(r,function(e,i){t.toggleClass(i,!!n.get(e));n.on("change:"+e.toString(),function(e,o){t.toggleClass(i,!!o)})})};i.Directives["data-ui"]=function(e,t,i,o){i.$ui=i.$ui||{};i.$ui[t]=e};i.View.prototype.setupDirective=function(){if(!e.isString(this.modelName)){if(console&&console.warn){console.warn("Backbone-simple-directive error: modelName is required for directiveView")}return false}this.$model=this.$model||new o;var n=e.filter(this.$("[data-model]").toArray(),function(e){return t(e).attr("data-model")===this.modelName&&t(e).data("model-bound")!==true},this);e.each(n,function(o){t(o).data("model-bound",true);e.each(i.Directives,function(i,n){if(!t(o).attr(n)||!e.isFunction(i)){return}i(t(o),t(o).attr(n),this,this.$model)},this)},this);return true};return i.Directives});
//# sourceMappingURL=backbone-simple-directive.min.map